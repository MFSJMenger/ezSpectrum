#Machine-dependent variables
#CXX = g++
CXX = g++

MKLROOT = /opt/intel/Compiler/11.0/081/mkl

CODE = ezSpectrum

CXXFLAGS = -O2 -I$(MKLROOT)/include

#LIBS = -llapack -lblas -lexpat
LIBS = -lexpat

# dynamic
#LDFLAGS = -L$(MKLROOT)/lib/em64t -lmkl_intel_ilp64 -lmkl_sequential -lmkl_core -lpthread $(LIBS) -lm

# static /opt/intel/Compiler/11.0/081/mkl
#LDFLAGS = -static $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_intel_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a -Wl,--end-group $(LIBS) -lm

LDFLAGS = -static $(MKLROOT)/lib/em64t/libmkl_solver_lp64_sequential.a -Wl,--start-group  $(MKLROOT)/lib/em64t/libmkl_intel_lp64.a $(MKLROOT)/lib/em64t/libmkl_sequential.a $(MKLROOT)/lib/em64t/libmkl_core.a -Wl,--end-group $(LIBS) -l\
m                                                                                                                                                                                                                                          






CXX_MOLECULAR_PROP = molecular_prop/molstate.C molecular_prop/atom.C molecular_prop/normalmode.C molecular_prop/simple_xml_parser.C molecular_prop/vibronic_state.C  molecular_prop/vector3d.C molecular_prop/spectrum.C  molecular_prop/spectralpoint.C
CXX_MATRIX_MATH = matrix_math/blas_calls.C  matrix_math/kmatrix.C  matrix_math/tmp_buffer.C  
CXX_BASIC_METHODS = basic_methods/genutil.C  basic_methods/mathutil.C 
CXX_COMMON = $(CXX_MOLECULAR_PROP) $(CXX_MATRIX_MATH) $(CXX_BASIC_METHODS)

CXX_HARMONIC_PES = harmonic_pes/franck_condon.C  harmonic_pes/harmonic_pes_main.C  harmonic_pes/parallel_approximation.C harmonic_pes/vibrational_indexing.C  harmonic_pes/dushinsky.C

CXX_SRC = main.C $(CXX_COMMON) $(CXX_HARMONIC_PES)

CXX_WNO_DEPRECATED = -Wno-deprecated

INCLUDES_COMMON = -I molecular_prop/ -I matrix_math/ -I basic_methods/ 
INCLUDES_HARMONIC_PES = -I harmonic_pes/

INCLUDES = $(INCLUDES_COMMON) $(INCLUDES_HARMONIC_PES)  

CXXBINOBJ = $(CXX_SRC:%.C=%.o)

#debug: to compile add: -g "after all (CXX)" :) ; gdb ezSpectrum; r <filename>; 
#profile: to compile add: -pg "after all (CXX)" :) ; run ; than "gprof ezSpectrum gmon.out > out.prof"

$(CODE): $(CXXBINOBJ)
	$(CXX) $^ $(LDFLAGS) $(INCLUDES) -o $(CODE)

%.o: %.C
	$(CXX)  $(CXX_WNO_DEPRECATED) $(CXXFLAGS) $(INCLUDES) -c $< -o $@

clean:
	/bin/rm -f $(CODE) *.o $(CXXBINOBJ)	


